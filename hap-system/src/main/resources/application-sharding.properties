spring.shardingsphere.mode.type=Standalone
spring.shardingsphere.mode.repository.type=File
spring.shardingsphere.mode.overwrite=true

spring.shardingsphere.props.sql-show=true

spring.shardingsphere.datasource.names=forum0
#spring.shardingsphere.datasource.names=forum0,forum1

spring.shardingsphere.datasource.forum0.jdbc-url=jdbc:mysql://localhost:3306/hap_forum?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.forum0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.forum0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.forum0.username=root
spring.shardingsphere.datasource.forum0.password=root

#spring.shardingsphere.datasource.forum1.jdbc-url=jdbc:mysql://localhost:3306/hap_forum_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.forum1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.forum1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.forum1.username=root
#spring.shardingsphere.datasource.forum1.password=root

# 默认数据库分片策略-start
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=uid
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
#spring.shardingsphere.rules.sharding.default-table-strategy.standard.sharding-algorithm-name=table-inline
#spring.shardingsphere.rules.sharding.default-table-strategy.standard.sharding-column=uid
#spring.shardingsphere.rules.sharding.default-key-generate-strategy.key-generator-name=snowflake
#spring.shardingsphere.rules.sharding.default-key-generate-strategy.column=
#spring.shardingsphere.rules.sharding.default-sharding-column= # 默认分片列名称
# 默认数据库分片策略-end

# 定义需要绑定规则的表
spring.shardingsphere.rules.sharding.binding-tables=article, article_comment, article_comment_child, topic, topic_discuss, discuss_comment, discuss_comment_child, link_guide, label, private_letter, message_notification
# 公共表配置,即那些经常被引用的表,会广播到所有数据源,所有数据源内的同名表都会同时进行操作
#spring.shardingsphere.rules.sharding.broadcast-tables=creator,label,link_guide

# 定义逻辑表
#spring.shardingsphere.rules.sharding.tables.article.logic-table=article
# 定义逻辑表所对应的所有真实表
# 不分库也不分表
spring.shardingsphere.rules.sharding.tables.article.actual-data-nodes=forum0.article
spring.shardingsphere.rules.sharding.tables.article_comment.actual-data-nodes=forum0.article_comment
spring.shardingsphere.rules.sharding.tables.article_comment_child.actual-data-nodes=forum0.article_comment_child
spring.shardingsphere.rules.sharding.tables.topic.actual-data-nodes=forum0.topic
spring.shardingsphere.rules.sharding.tables.topic_discuss.actual-data-nodes=forum0.topic_discuss
spring.shardingsphere.rules.sharding.tables.discuss_comment.actual-data-nodes=forum0.discuss_comment
spring.shardingsphere.rules.sharding.tables.discuss_comment_child.actual-data-nodes=forum0.discuss_comment_child
spring.shardingsphere.rules.sharding.tables.link_guide.actual-data-nodes=forum0.link_guide
spring.shardingsphere.rules.sharding.tables.label.actual-data-nodes=forum0.label
spring.shardingsphere.rules.sharding.tables.private_letter.actual-data-nodes=forum0.private_letter
spring.shardingsphere.rules.sharding.tables.message_notification.actual-data-nodes=forum0.message_notification
# 只分库不分表
#spring.shardingsphere.rules.sharding.tables.article.actual-data-nodes=forum$->{0..1}.article
# 分库又分表
#spring.shardingsphere.rules.sharding.tables.article.actual-data-nodes=forum$->{0..1}.article$->{0..1}
# 定义分库字段和分库算法名
#spring.shardingsphere.rules.sharding.tables.article.database-strategy.standard.sharding-column=article_id
#spring.shardingsphere.rules.sharding.tables.article.database-strategy.standard.sharding-algorithm-name=article-database
# 分库算法，对主键取模算法分为多个库
#spring.shardingsphere.rules.sharding.sharding-algorithms.article-database.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.article-database.props.algorithm-expression=forum$->{article_id % 2}

# 定义同一库分表的规则
#spring.shardingsphere.rules.sharding.tables.article.table-strategy.standard.sharding-column=article_id
#spring.shardingsphere.rules.sharding.tables.article.table-strategy.standard.sharding-algorithm-name=article-table
# 分表算法，对article_id模2算法分为两个表
#spring.shardingsphere.rules.sharding.sharding-algorithms.article-table.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.article-table.props.algorithm-expression=article_$->{article_id % 2}

# 定义分布式主键策略
spring.shardingsphere.rules.sharding.tables.article.key-generate-strategy.column=article_id
spring.shardingsphere.rules.sharding.tables.article.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.article_comment.key-generate-strategy.column=comment_id
spring.shardingsphere.rules.sharding.tables.article_comment.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.article_comment_child.key-generate-strategy.column=comment_id
spring.shardingsphere.rules.sharding.tables.article_comment_child.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.topic.key-generate-strategy.column=topic_id
spring.shardingsphere.rules.sharding.tables.topic.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.topic_discuss.key-generate-strategy.column=discuss_id
spring.shardingsphere.rules.sharding.tables.topic_discuss.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.discuss_comment.key-generate-strategy.column=comment_id
spring.shardingsphere.rules.sharding.tables.discuss_comment.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.discuss_comment_child.key-generate-strategy.column=comment_id
spring.shardingsphere.rules.sharding.tables.discuss_comment_child.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.link_guide.key-generate-strategy.column=guide_id
spring.shardingsphere.rules.sharding.tables.link_guide.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.label.key-generate-strategy.column=label_id
spring.shardingsphere.rules.sharding.tables.label.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.private_letter.key-generate-strategy.column=letter_id
spring.shardingsphere.rules.sharding.tables.private_letter.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.message_notification.key-generate-strategy.column=message_id
spring.shardingsphere.rules.sharding.tables.message_notification.key-generate-strategy.key-generator-name=snowflake
# 定义主键策略的实现类型
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
