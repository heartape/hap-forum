spring.shardingsphere.mode.type=Standalone
spring.shardingsphere.mode.repository.type=File
spring.shardingsphere.mode.overwrite=true

spring.shardingsphere.datasource.names=forum0,forum1

spring.shardingsphere.datasource.forum0.jdbc-url=jdbc:mysql://localhost:3306/hap_forum?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.forum0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.forum0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.forum0.username=root
spring.shardingsphere.datasource.forum0.password=root

spring.shardingsphere.datasource.forum1.jdbc-url=jdbc:mysql://localhost:3306/hap_forum_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.forum1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.forum1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.forum1.username=root
spring.shardingsphere.datasource.forum1.password=root

# 默认数据库分片策略-start
# 公共字段uid用于分库
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=uid
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
# 默认数据库分片策略-end

# 将表绑定到某个规则,关联的表共用一个规则
spring.shardingsphere.rules.sharding.binding-tables=article
#spring.shardingsphere.rules.sharding.binding-tables=article,article_comment,article_comment_children,topic,topic_discuss,discuss_comment,discuss_comment_children
# 公共表配置,即那些经常被引用的表,会广播到所有数据源,所有数据源内的同名表都会同时进行操作
#spring.shardingsphere.rules.sharding.broadcast-tables=creator,label,link_guide

# 定义某个库的规则
spring.shardingsphere.rules.sharding.tables.article.actual-data-nodes=forum$->{0..1}.article
# 定义某张表的规则
#spring.shardingsphere.rules.sharding.tables.article.table-strategy.standard.sharding-column=article_id
#spring.shardingsphere.rules.sharding.tables.article.table-strategy.standard.sharding-algorithm-name=article-inline
# 定义某张表的主键策略
spring.shardingsphere.rules.sharding.tables.article.key-generate-strategy.column=article_id
spring.shardingsphere.rules.sharding.tables.article.key-generate-strategy.key-generator-name=snowflake

# 分库算法，对user_id模2算法分为两个库
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=forum$->{uid % 2}

# 分表算法，对article_id模2算法分为两个表
#spring.shardingsphere.rules.sharding.sharding-algorithms.article-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.article-inline.props.algorithm-expression=article_$->{article_id % 2}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
